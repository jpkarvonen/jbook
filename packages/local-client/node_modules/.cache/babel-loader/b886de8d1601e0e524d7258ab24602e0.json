{"ast":null,"code":"var _jsxFileName = \"/Users/karvonen/Valet/udemy-port/jbook/src/components/cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellListItem from './cell-list-item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(CellListItem, {\n    cell: cell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedCells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/Users/karvonen/Valet/udemy-port/jbook/src/components/cell-list.tsx"],"names":["useTypedSelector","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,KAAK,GAAGH,gBAAgB,CAAC;AAAA,QAAC;AAAEG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAT,KAAD;AAAA,WAC7BD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAD6B;AAAA,GAAD,CAA9B;AAIA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAWG,IAAD,iBAAU,QAAC,YAAD;AAAc,IAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,UAApB,CAAtB;AAEA,sBAAO;AAAA,cAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARD;;GAAMN,Q;UACUF,gB;;;KADVE,Q;AAUN,eAAeA,QAAf","sourcesContent":["import { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellListItem from './cell-list-item';\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  );\n\n  const renderedCells = cells.map((cell) => <CellListItem cell={cell} />);\n\n  return <div>{renderedCells}</div>;\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}