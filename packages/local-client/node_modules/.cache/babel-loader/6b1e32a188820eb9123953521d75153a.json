{"ast":null,"code":"import insertText from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default (function (options, e) {\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  if (!options.tabSize) {\n    options.tabSize = 2;\n  }\n  /**\n   * `9` - `Tab`\n   */\n\n\n  if (e.keyCode === 9) {\n    stopPropagation(e);\n    var space = new Array(options.tabSize + 1).join(' ');\n    var val = space;\n\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n\n      var modifiedTextLine = [];\n\n      _end.forEach(function (item, idx) {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, space);\n      textArea.replaceSelection(modifiedTextObj.modifiedText);\n      textArea.setSelectionRange({\n        start: newStarNum + options.tabSize,\n        end: newStarNum + oldSelectText.length + modifiedTextLine.length * options.tabSize\n      });\n    } else {\n      return insertText(target, val);\n    }\n  } else if (e.keyCode === 13 && /^-\\s/.test(currentLineStr)) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    return insertText(target, \"\\n- \");\n  }\n});","map":{"version":3,"mappings":"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","names":["insertText","TextAreaTextApi","insertBeforeEachLine","stopPropagation","e","preventDefault","options","target","starVal","value","substr","selectionStart","valArr","split","currentLineStr","length","textArea","tabSize","keyCode","space","Array","join","val","selectionEnd","_star","substring","_end","modifiedTextLine","forEach","item","idx","push","modifiedText","oldSelectText","newStarNum","setSelectionRange","start","indexOf","end","modifiedTextObj","replaceSelection","test"],"sources":["/Users/karvonen/Valet/udemy-port/jbook/node_modules/@uiw/react-md-editor/src/components/TextArea/hotkeys.tsx"],"sourcesContent":["import insertText from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n\nexport interface IHotkeyOptions {\n  tabSize?: number;\n}\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default (options: IHotkeyOptions, e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n  const target = e.target as HTMLTextAreaElement;\n  const starVal = target.value.substr(0, target.selectionStart);\n  const valArr = starVal.split('\\n');\n  const currentLineStr = valArr[valArr.length - 1];\n  const textArea = new TextAreaTextApi(target);\n  if (!options.tabSize) {\n    options.tabSize = 2;\n  }\n  /**\n   * `9` - `Tab`\n   */\n  if (e.keyCode === 9) {\n    stopPropagation(e);\n    const space = new Array(options.tabSize + 1).join(' ');\n    let val = space;\n    if (target.selectionStart !== target.selectionEnd) {\n      const _star = target.value.substring(0, target.selectionStart).split('\\n');\n      const _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      const modifiedTextLine: string[] = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      const modifiedText = modifiedTextLine.join('\\n');\n      const oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      const newStarNum = target.value.substring(0, target.selectionStart).length;\n\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd,\n      });\n\n      const modifiedTextObj = insertBeforeEachLine(modifiedText, space);\n      textArea.replaceSelection(modifiedTextObj.modifiedText);\n      textArea.setSelectionRange({\n        start: newStarNum + options.tabSize,\n        end: newStarNum + oldSelectText.length + (modifiedTextLine.length * options.tabSize),\n      });\n    } else {\n      return insertText(target, val);\n    }\n  } else if (e.keyCode === 13 && /^-\\s/.test(currentLineStr)) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    return insertText(target, `\\n- `);\n  }\n}"]},"metadata":{},"sourceType":"module"}