{"ast":null,"code":"import * as React from 'react';\nimport { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord } from '../utils/markdownUtils';\nexport var quote = {\n  name: 'quote',\n  keyCommand: 'quote',\n  buttonProps: {\n    'aria-label': 'Insert a quote'\n  },\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\n  })),\n  execute: function execute(state, api) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\"); // Replaces the current selection with the quote mark up\n\n    api.replaceSelection(\"\".concat(breaksBefore, \"> \").concat(state1.selectedText).concat(breaksAfter));\n    var selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    var selectionEnd = selectionStart + state1.selectedText.length;\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,iCAAT,EAA4CC,gCAA5C,EAA8EC,UAA9E,QAAgG,wBAAhG;AAEA,OAAO,IAAMC,KAAe,GAAG;AAC7BC,MAAI,EAAE,OADuB;AAE7BC,YAAU,EAAE,OAFiB;AAG7BC,aAAW,EAAE;AAAE,kBAAc;AAAhB,GAHgB;AAI7BC,MAAI,eACFR;AAAKS,SAAK,EAAC,IAAX;AAAgBC,UAAM,EAAC,IAAvB;AAA4BC,WAAO,EAAC;AAApC,kBACEX;AAAMY,QAAI,EAAC,cAAX;AAA0BC,KAAC,EAAC;AAA5B,IADF,CAL2B;AAS7BC,SAAO,EAAE,iBAACC,KAAD,EAAmBC,GAAnB,EAAoC;AAC3C;AACA,QAAMC,iBAAiB,GAAGd,UAAU,CAAC;AAAEe,UAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,eAAS,EAAEJ,KAAK,CAACI;AAArC,KAAD,CAApC;AACA,QAAMC,MAAM,GAAGJ,GAAG,CAACK,iBAAJL,CAAsBC,iBAAtBD,CAAf;AACA,QAAMM,iBAAiB,GAAGrB,iCAAiC,CAACmB,MAAM,CAACF,IAAR,EAAcE,MAAM,CAACD,SAAPC,CAAiBG,KAA/B,CAA3D;AACA,QAAMC,YAAY,GAAGC,KAAK,CAACH,iBAAiB,GAAG,CAArB,CAALG,CAA6BC,IAA7BD,CAAkC,IAAlCA,CAArB;AAEA,QAAME,gBAAgB,GAAGzB,gCAAgC,CAACkB,MAAM,CAACF,IAAR,EAAcE,MAAM,CAACD,SAAPC,CAAiBQ,GAA/B,CAAzD;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACE,gBAAgB,GAAG,CAApB,CAALF,CAA4BC,IAA5BD,CAAiC,IAAjCA,CAApB,CAR2C,CAU3C;;AACAT,OAAG,CAACc,gBAAJd,WAAwBQ,YAAxB,eAAyCJ,MAAM,CAACW,YAAhD,SAA+DF,WAA/D;AAEA,QAAMG,cAAc,GAAGZ,MAAM,CAACD,SAAPC,CAAiBG,KAAjBH,GAAyBE,iBAAzBF,GAA6C,CAApE;AACA,QAAMa,YAAY,GAAGD,cAAc,GAAGZ,MAAM,CAACW,YAAPX,CAAoBc,MAA1D;AAEAlB,OAAG,CAACK,iBAAJL,CAAsB;AACpBO,WAAK,EAAES,cADa;AAEpBJ,SAAG,EAAEK;AAFe,KAAtBjB;AAID;AA7B4B,CAAxB","names":["React","getBreaksNeededForEmptyLineBefore","getBreaksNeededForEmptyLineAfter","selectWord","quote","name","keyCommand","buttonProps","icon","width","height","viewBox","fill","d","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","breaksBeforeCount","start","breaksBefore","Array","join","breaksAfterCount","end","breaksAfter","replaceSelection","selectedText","selectionStart","selectionEnd","length"],"sources":["/Users/karvonen/Valet/udemy-port/jbook/node_modules/@uiw/react-md-editor/src/commands/quote.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextApi } from './';\nimport { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord } from '../utils/markdownUtils';\n\nexport const quote: ICommand = {\n  name: 'quote',\n  keyCommand: 'quote',\n  buttonProps: { 'aria-label': 'Insert a quote' },\n  icon: (\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 520 520\">\n      <path fill=\"currentColor\" d=\"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\" />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextApi) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    const breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n\n    const breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    const breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n\n    // Replaces the current selection with the quote mark up\n    api.replaceSelection(`${breaksBefore}> ${state1.selectedText}${breaksAfter}`);\n\n    const selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    const selectionEnd = selectionStart + state1.selectedText.length;\n\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}