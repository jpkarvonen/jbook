{"ast":null,"code":"import React, { useEffect, useMemo, useRef } from 'react';\nimport \"./index.css\";\n\nvar DragBar = function DragBar(props) {\n  var _ref = props || {},\n      prefixCls = _ref.prefixCls,\n      onChange = _ref.onChange;\n\n  var dragRef = useRef();\n\n  function handleMouseMove(event) {\n    if (dragRef.current) {\n      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n\n  function handleMouseDown(event) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(function () {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return function () {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  var svg = useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 512 512\",\n      height: \"100%\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-bar\"),\n    onMouseDown: handleMouseDown\n  }, svg);\n};\n\nexport default DragBar;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AAEA;;AASA,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,CAACC,KAAD,EAAW;AAAA,aAClBA,KAAK,IAAI,EADS;AAAA,MAC1CC,SAD0C,QAC1CA,SAD0C;AAAA,MAC/BC,QAD+B,QAC/BA,QAD+B;;AAElD,MAAMC,OAAO,GAAGL,MAAM,EAAtB;;AACA,WAASM,eAAT,CAAyBC,KAAzB,EAA4C;AAC1C,QAAIF,OAAO,CAACG,OAAZ,EAAqB;AACnB,UAAMC,SAAS,GAAGJ,OAAO,CAACG,OAARH,CAAgBK,MAAhBL,GAAyBE,KAAK,CAACI,OAA/BN,GAAyCA,OAAO,CAACG,OAARH,CAAgBO,KAA3E;;AACA,UAAIH,SAAS,IAAIP,KAAK,CAACW,SAAnBJ,IAAgCA,SAAS,IAAIP,KAAK,CAACY,SAAvD,EAAkE;AAChEV,gBAAQ,IAAIA,QAAQ,CAACC,OAAO,CAACG,OAARH,CAAgBK,MAAhBL,IAA0BE,KAAK,CAACI,OAANJ,GAAgBF,OAAO,CAACG,OAARH,CAAgBO,KAA1DP,CAAD,CAApBD;AACD;AACF;AACF;;AACD,WAASW,aAAT,GAAyB;AACvBV,WAAO,CAACG,OAARH,GAAkBW,SAAlBX;AACD;;AACD,WAASY,eAAT,CAAyBV,KAAzB,EAA8E;AAC5EF,WAAO,CAACG,OAARH,GAAkB;AAChBK,YAAM,EAAER,KAAK,CAACQ,MADE;AAEhBE,WAAK,EAAEL,KAAK,CAACI;AAFG,KAAlBN;AAID;;AAEDP,WAAS,CAAC,YAAM;AACdoB,YAAQ,CAACC,gBAATD,CAA0B,WAA1BA,EAAuCZ,eAAvCY;AACAA,YAAQ,CAACC,gBAATD,CAA0B,SAA1BA,EAAqCH,aAArCG;AACA,WAAO,YAAM;AACXA,cAAQ,CAACE,mBAATF,CAA6B,WAA7BA,EAA0CZ,eAA1CY;AACAA,cAAQ,CAACE,mBAATF,CAA6B,SAA7BA,EAAwCH,aAAxCG;AAFF;AAHO,KAON,EAPM,CAATpB;AAQA,MAAMuB,GAAG,GAAGtB,OAAO,CAAC;AAAA,wBAClBF;AAAKyB,aAAO,EAAC,aAAb;AAA2BZ,YAAM,EAAC;AAAlC,oBACEb;AAAM0B,UAAI,EAAC,cAAX;AAA0BC,OAAC,EAAC;AAA5B,MADF,CADkB;AAAD,KAIhB,EAJgB,CAAnB;AAKA,sBACE3B;AAAK4B,aAAS,YAAKtB,SAAL,SAAd;AAAoCuB,eAAW,EAAET;AAAjD,KACGI,GADH,CADF;AAlCF;;AAyCA,eAAepB,OAAf","names":["React","useEffect","useMemo","useRef","DragBar","props","prefixCls","onChange","dragRef","handleMouseMove","event","current","newHeight","height","clientY","dragY","minHeight","maxHeight","handleMouseUp","undefined","handleMouseDown","document","addEventListener","removeEventListener","svg","viewBox","fill","d","className","onMouseDown"],"sources":["/Users/karvonen/Valet/udemy-port/local-client/node_modules/@uiw/react-md-editor/src/components/DragBar/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../utils';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number, dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  }, []);\n  const svg = useMemo(() => (\n    <svg viewBox=\"0 0 512 512\" height=\"100%\">\n      <path fill=\"currentColor\" d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\" />\n    </svg>\n  ), []);\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n}\n\nexport default DragBar;\n"]},"metadata":{},"sourceType":"module"}