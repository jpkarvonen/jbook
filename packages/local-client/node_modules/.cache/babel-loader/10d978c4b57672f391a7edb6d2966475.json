{"ast":null,"code":"var _jsxFileName = \"/Users/karvonen/Valet/udemy-port/jbook/src/components/add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport './add-cell.css';\nimport { useActions } from '../hooks/use-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCell = _ref => {\n  _s();\n\n  let {\n    nextCellId\n  } = _ref;\n  const {\n    insertCellBefore\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-cell\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => insertCellBefore(nextCellId, 'code'),\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => insertCellBefore(nextCellId, 'text'),\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCell, \"WCeYMonidkUsrU82gdQi6l0Xt4c=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["/Users/karvonen/Valet/udemy-port/jbook/src/components/add-cell.tsx"],"names":["useActions","AddCell","nextCellId","insertCellBefore"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;;;AAMA,MAAMC,OAA+B,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAuBH,UAAU,EAAvC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMG,gBAAgB,CAACD,UAAD,EAAa,MAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACD,UAAD,EAAa,MAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;;GAAMD,O;UACyBD,U;;;KADzBC,O;AAkBN,eAAeA,OAAf","sourcesContent":["import './add-cell.css';\nimport { useActions } from '../hooks/use-actions';\n\ninterface AddCellProps {\n  nextCellId: string | null;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ nextCellId }) => {\n  const { insertCellBefore } = useActions();\n\n  return (\n    <div className=\"add-cell\">\n      <div className=\"add-buttons\">\n        <button onClick={() => insertCellBefore(nextCellId, 'code')}>\n          Code\n        </button>\n        <button onClick={() => insertCellBefore(nextCellId, 'text')}>\n          Text\n        </button>\n        <div className=\"divider\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}