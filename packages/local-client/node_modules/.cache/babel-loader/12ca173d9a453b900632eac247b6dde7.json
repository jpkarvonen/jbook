{"ast":null,"code":"import axios from 'axios';\nimport localForage from 'localforage';\nconst fileCache = localForage.createInstance({\n  name: 'filecache'\n});\nexport const fetchPlugin = inputCode => {\n  return {\n    name: 'fetch-plugin',\n\n    setup(build) {\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        if (args.path === 'index.js') {\n          return {\n            loader: 'jsx',\n            contents: inputCode\n          };\n        }\n\n        const cachedResult = await fileCache.getItem(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const result = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/karvonen/Valet/udemy-port/jbook/src/plugins/fetch-plugin.ts"],"names":["axios","localForage","fileCache","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","args","path","loader","contents","cachedResult","getItem","data","request","get","result","resolveDir","URL","responseURL","pathname","setItem"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAZ,CAA2B;AAC3CC,EAAAA,IAAI,EAAE;AADqC,CAA3B,CAAlB;AAIA,OAAO,MAAMC,WAAW,GAAIC,SAAD,IAAuB;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAE,cADD;;AAELG,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAChCA,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOC,IAAP,IAAqB;AAClD,YAAIA,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;AAC5B,iBAAO;AACLC,YAAAA,MAAM,EAAE,KADH;AAELC,YAAAA,QAAQ,EAAER;AAFL,WAAP;AAID;;AAED,cAAMS,YAAY,GAAG,MAAMb,SAAS,CAACc,OAAV,CACzBL,IAAI,CAACC,IADoB,CAA3B;;AAIA,YAAIG,YAAJ,EAAkB;AAChB,iBAAOA,YAAP;AACD;;AAED,cAAM;AAAEE,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAoB,MAAMlB,KAAK,CAACmB,GAAN,CAAUR,IAAI,CAACC,IAAf,CAAhC;AACA,cAAMQ,MAA4B,GAAG;AACnCP,UAAAA,MAAM,EAAE,KAD2B;AAEnCC,UAAAA,QAAQ,EAAEG,IAFyB;AAGnCI,UAAAA,UAAU,EAAE,IAAIC,GAAJ,CAAQ,IAAR,EAAcJ,OAAO,CAACK,WAAtB,EAAmCC;AAHZ,SAArC;AAKA,cAAMtB,SAAS,CAACuB,OAAV,CAAkBd,IAAI,CAACC,IAAvB,EAA6BQ,MAA7B,CAAN;AACA,eAAOA,MAAP;AACD,OAxBD;AAyBD;;AA5BI,GAAP;AA8BD,CA/BM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        if (args.path === 'index.js') {\n          return {\n            loader: 'jsx',\n            contents: inputCode,\n          };\n        }\n\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}