{"ast":null,"code":"import * as React from 'react';\nimport { selectWord, getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter } from '../utils/markdownUtils';\n/**\n * Inserts insertionString before each line\n */\n\nexport function insertBeforeEachLine(selectedText, insertBefore) {\n  var lines = selectedText.split(/\\n/);\n  var insertionLength = 0;\n  var modifiedText = lines.map(function (item, index) {\n    if (typeof insertBefore === \"string\") {\n      insertionLength += insertBefore.length;\n      return insertBefore + item;\n    } else if (typeof insertBefore === \"function\") {\n      var insertionResult = insertBefore(item, index);\n      insertionLength += insertionResult.length;\n      return insertBefore(item, index) + item;\n    }\n\n    throw Error(\"insertion is expected to be either a string or a function\");\n  }).join(\"\\n\");\n  return {\n    modifiedText: modifiedText,\n    insertionLength: insertionLength\n  };\n}\nexport var makeList = function makeList(state, api, insertBefore) {\n  // Adjust the selection to encompass the whole word if the caret is inside one\n  var newSelectionRange = selectWord({\n    text: state.text,\n    selection: state.selection\n  });\n  var state1 = api.setSelectionRange(newSelectionRange);\n  var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n  var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n  var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n  var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n  var modifiedText = insertBeforeEachLine(state1.selectedText, insertBefore);\n  api.replaceSelection(\"\".concat(breaksBefore).concat(modifiedText.modifiedText).concat(breaksAfter)); // Specifically when the text has only one line, we can exclude the \"- \", for example, from the selection\n\n  var oneLinerOffset = state1.selectedText.indexOf(\"\\n\") === -1 ? modifiedText.insertionLength : 0;\n  var selectionStart = state1.selection.start + breaksBeforeCount + oneLinerOffset;\n  var selectionEnd = selectionStart + modifiedText.modifiedText.length - oneLinerOffset; // Adjust the selection to not contain the **\n\n  api.setSelectionRange({\n    start: selectionStart,\n    end: selectionEnd\n  });\n};\nexport var unorderedListCommand = {\n  name: 'unordered-list',\n  keyCommand: 'list',\n  buttonProps: {\n    'aria-label': 'Add unordered list'\n  },\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    \"data-name\": \"unordered-list\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 512 512\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n  })),\n  execute: function execute(state, api) {\n    makeList(state, api, \"- \");\n  }\n};\nexport var orderedListCommand = {\n  name: 'ordered-list',\n  keyCommand: 'list',\n  buttonProps: {\n    'aria-label': 'Add ordered list'\n  },\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    \"data-name\": \"ordered-list\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n  })),\n  execute: function execute(state, api) {\n    makeList(state, api, function (item, index) {\n      return \"\".concat(index + 1, \". \");\n    });\n  }\n};\nexport var checkedListCommand = {\n  name: 'checked-list',\n  keyCommand: 'list',\n  buttonProps: {\n    'aria-label': 'Add checked list'\n  },\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    \"data-name\": \"checked-list\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"\n  })),\n  execute: function execute(state, api) {\n    makeList(state, api, function (item, index) {\n      return \"- [ ] \";\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["React","selectWord","getBreaksNeededForEmptyLineBefore","getBreaksNeededForEmptyLineAfter","insertBeforeEachLine","selectedText","insertBefore","lines","split","insertionLength","modifiedText","map","item","index","length","insertionResult","Error","join","makeList","state","api","newSelectionRange","text","selection","state1","setSelectionRange","breaksBeforeCount","start","breaksBefore","Array","breaksAfterCount","end","breaksAfter","replaceSelection","oneLinerOffset","indexOf","selectionStart","selectionEnd","unorderedListCommand","name","keyCommand","buttonProps","icon","width","height","viewBox","fill","d","execute","orderedListCommand","role","checkedListCommand"],"sources":["/Users/karvonen/Valet/udemy-port/local-client/node_modules/@uiw/react-md-editor/src/commands/list.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextApi } from './';\nimport { selectWord, getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter } from '../utils/markdownUtils';\n\n\nexport type AlterLineFunction = (line: string, index: number) => string;\n\n/**\n * Inserts insertionString before each line\n */\nexport function insertBeforeEachLine(selectedText: string, insertBefore: string | AlterLineFunction): { modifiedText: string, insertionLength: number } {\n  const lines = selectedText.split(/\\n/);\n\n  let insertionLength = 0;\n  const modifiedText = lines.map((item, index) => {\n    if (typeof insertBefore === \"string\") {\n      insertionLength += insertBefore.length;\n      return insertBefore + item;\n    } else if (typeof insertBefore === \"function\") {\n      const insertionResult = insertBefore(item, index);\n      insertionLength += insertionResult.length;\n      return insertBefore(item, index) + item;\n    }\n    throw Error(\"insertion is expected to be either a string or a function\");\n  }).join(\"\\n\");\n\n  return { modifiedText, insertionLength }\n}\n\nexport const makeList = (state: TextState, api: TextApi, insertBefore: string | AlterLineFunction) => {\n  // Adjust the selection to encompass the whole word if the caret is inside one\n  const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n  const state1 = api.setSelectionRange(newSelectionRange);\n\n  const breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n  const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n\n  const breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n  const breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n\n  const modifiedText = insertBeforeEachLine(state1.selectedText, insertBefore);\n\n  api.replaceSelection(`${breaksBefore}${modifiedText.modifiedText}${breaksAfter}`);\n\n  // Specifically when the text has only one line, we can exclude the \"- \", for example, from the selection\n  const oneLinerOffset = state1.selectedText.indexOf(\"\\n\") === -1 ? modifiedText.insertionLength : 0;\n\n  const selectionStart = state1.selection.start + breaksBeforeCount + oneLinerOffset;\n  const selectionEnd = selectionStart + modifiedText.modifiedText.length - oneLinerOffset;\n\n  // Adjust the selection to not contain the **\n  api.setSelectionRange({\n    start: selectionStart,\n    end: selectionEnd\n  });\n}\n\nexport const unorderedListCommand: ICommand = {\n  name: 'unordered-list',\n  keyCommand: 'list',\n  buttonProps: { 'aria-label': 'Add unordered list' },\n  icon: (\n    <svg data-name=\"unordered-list\" width=\"12\" height=\"12\" viewBox=\"0 0 512 512\">\n      <path fill=\"currentColor\" d=\"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\" />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextApi) => {\n    makeList(state, api, \"- \")\n  },\n};\n\nexport const orderedListCommand: ICommand = {\n  name: 'ordered-list',\n  keyCommand: 'list',\n  buttonProps: { 'aria-label': 'Add ordered list' },\n  icon: (\n    <svg data-name=\"ordered-list\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 512 512\">\n      <path fill=\"currentColor\" d=\"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\" />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextApi) => {\n    makeList(state, api, (item, index) => `${index + 1}. `)\n  },\n};\n\nexport const checkedListCommand: ICommand = {\n  name: 'checked-list',\n  keyCommand: 'list',\n  buttonProps: { 'aria-label': 'Add checked list' },\n  icon: (\n    <svg data-name=\"checked-list\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 512 512\">\n      <path fill=\"currentColor\" d=\"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\" />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextApi) => {\n    makeList(state, api, (item, index) => `- [ ] `)\n  },\n};\n"]},"metadata":{},"sourceType":"module"}