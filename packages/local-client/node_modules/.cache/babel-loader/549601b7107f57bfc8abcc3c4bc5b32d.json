{"ast":null,"code":"import { ActionType } from '../action-types';\nexport const updateCell = (id, content) => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content\n    }\n  };\n};\nexport const deleteCell = id => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id\n  };\n};\nexport const moveCell = (id, direction) => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction\n    }\n  };\n};\nexport const insertCellAfter = (id, type) => {\n  return {\n    type: ActionType.INSERT_CELL_BEFORE,\n    payload: {\n      id,\n      type\n    }\n  };\n};","map":{"version":3,"sources":["/Users/karvonen/Valet/udemy-port/jbook/src/state/action-creators/index.ts"],"names":["ActionType","updateCell","id","content","type","UPDATE_CELL","payload","deleteCell","DELETE_CELL","moveCell","direction","MOVE_CELL","insertCellAfter","INSERT_CELL_BEFORE"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAWA,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAD,EAAaC,OAAb,KAAmD;AAC3E,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UAAU,CAACK,WADZ;AAELC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMI,UAAU,GAAIL,EAAD,IAAkC;AAC1D,SAAO;AACLE,IAAAA,IAAI,EAAEJ,UAAU,CAACQ,WADZ;AAELF,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMO,QAAQ,GAAG,CAACP,EAAD,EAAaQ,SAAb,KAAsD;AAC5E,SAAO;AACLN,IAAAA,IAAI,EAAEJ,UAAU,CAACW,SADZ;AAELL,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPQ,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAME,eAAe,GAAG,CAC7BV,EAD6B,EAE7BE,IAF6B,KAGF;AAC3B,SAAO;AACLA,IAAAA,IAAI,EAAEJ,UAAU,CAACa,kBADZ;AAELP,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPE,MAAAA;AAFO;AAFJ,GAAP;AAOD,CAXM","sourcesContent":["import { ActionType } from '../action-types';\nimport { CellTypes } from '../cell';\nimport {\n  Action,\n  UpdateCellAction,\n  DeleteCellAction,\n  MoveCellAction,\n  InsertCellBeforeAction,\n  Direction,\n} from '../actions';\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const insertCellAfter = (\n  id: string | null,\n  type: CellTypes\n): InsertCellBeforeAction => {\n  return {\n    type: ActionType.INSERT_CELL_BEFORE,\n    payload: {\n      id,\n      type,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}