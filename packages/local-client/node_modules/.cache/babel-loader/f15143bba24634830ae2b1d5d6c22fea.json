{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport Child from './Child';\nimport \"./index.css\";\nexport default function Toolbar() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var prefixCls = props.prefixCls,\n      _props$commands = props.commands,\n      commands = _props$commands === void 0 ? [] : _props$commands,\n      _props$commandHelp = props.commandHelp,\n      commandHelp = _props$commandHelp === void 0 ? {} : _props$commandHelp,\n      active = props.active,\n      groupName = props.groupName;\n\n  function handleClick(command, name) {\n    var onCommand = props.onCommand;\n    onCommand && onCommand(command, groupName || name);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-toolbar\")\n  }, /*#__PURE__*/React.createElement(\"ul\", null, commands.map(function (item, idx) {\n    if (item.keyCommand === 'divider') {\n      return /*#__PURE__*/React.createElement(\"li\", _extends({\n        key: idx\n      }, item.liProps, {\n        className: \"\".concat(prefixCls, \"-toolbar-divider\")\n      }));\n    }\n\n    if (!item.keyCommand) return;\n    var activeBtn = active && (item.value ? active[item.keyCommand] && active[item.keyCommand] === item.value : active[item.keyCommand]);\n    var childNode = typeof item.children === 'function' ? item.children(_objectSpread({\n      close: function close() {\n        return handleClick({}, item.groupName);\n      },\n      execute: function execute() {\n        return handleClick({\n          execute: item.execute\n        });\n      }\n    }, commandHelp)) : undefined;\n    return /*#__PURE__*/React.createElement(\"li\", _extends({\n      key: idx\n    }, item.liProps, {\n      className: classnames({\n        active: activeBtn\n      })\n    }), !item.buttonProps && item.icon, item.buttonProps && /*#__PURE__*/React.createElement('button', _objectSpread(_objectSpread({\n      type: 'button',\n      disabled: active && active.preview && active.preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand),\n      'data-name': item.name\n    }, item.buttonProps), {}, {\n      onClick: function onClick(evn) {\n        evn.stopPropagation();\n        handleClick(item, item.groupName);\n      }\n    }), item.icon), item.children && /*#__PURE__*/React.createElement(Child, {\n      active: active,\n      groupName: item.groupName,\n      prefixCls: prefixCls,\n      onCommand: props.onCommand,\n      children: childNode,\n      commands: Array.isArray(item.children) && typeof item.children !== 'function' ? item.children : undefined\n    }));\n  })));\n}\n;","map":{"version":3,"mappings":"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","names":["React","classnames","Child","Toolbar","props","prefixCls","commands","commandHelp","active","groupName","handleClick","command","name","onCommand","className","map","item","idx","keyCommand","key","liProps","activeBtn","value","childNode","children","close","execute","undefined","buttonProps","icon","createElement","type","disabled","preview","test","onClick","evn","stopPropagation","Array","isArray"],"sources":["/Users/karvonen/Valet/udemy-port/jbook/packages/local-client/node_modules/@uiw/react-md-editor/src/components/Toolbar/index.tsx"],"sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { IProps } from '../../utils';\nimport { ICommand, ICommandChildHandleParam } from '../../commands';\nimport Child from './Child';\nimport './index.less';\n\nexport interface IToolbarProps extends IProps {\n  onCommand?: (command: ICommand<string>, groupName?: string) => void;\n  commands?: ICommand<string>[];\n  groupName?: string;\n  commandHelp?: ICommandChildHandleParam;\n  active?: {\n    [key: string]: any,\n  },\n}\n\nexport default function Toolbar(props: IToolbarProps = {}) {\n  const { prefixCls, commands = [], commandHelp = {}, active, groupName } = props;\n  function handleClick(command: ICommand<string>, name?: string) {\n    const { onCommand } = props;\n    onCommand && onCommand(command, groupName || name);\n  }\n  return (\n    <div className={`${prefixCls}-toolbar`}>\n      <ul>\n        {commands.map((item, idx) => {\n          if (item.keyCommand === 'divider') {\n            return <li key={idx} {...item.liProps} className={`${prefixCls}-toolbar-divider`} />\n          }\n          if (!item.keyCommand) return;\n          const activeBtn = active && (item.value ? active[item.keyCommand] && active[item.keyCommand] === item.value : active[item.keyCommand]);\n\n          const childNode = typeof item.children === 'function'\n            ? item.children({\n              close: () => handleClick({ }, item.groupName),\n              execute: () => handleClick({ execute: item.execute }),\n              ...commandHelp,\n            })\n            : undefined;\n          return (\n            <li key={idx} {...item.liProps} className={classnames({ active: activeBtn })}>\n              {!item.buttonProps && item.icon}\n              {item.buttonProps && React.createElement('button', {\n                type: 'button',\n                disabled: active && active.preview && active.preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand),\n                'data-name': item.name, ...item.buttonProps,\n                onClick: (evn: any) => {\n                  evn.stopPropagation()\n                  handleClick(item, item.groupName);\n                }\n              }, item.icon)}\n              {item.children && (\n                <Child\n                  active={active}\n                  groupName={item.groupName}\n                  prefixCls={prefixCls}\n                  onCommand={props.onCommand}\n                  children={childNode}\n                  commands={Array.isArray(item.children) && typeof item.children !== 'function' ? item.children : undefined}\n                />\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}