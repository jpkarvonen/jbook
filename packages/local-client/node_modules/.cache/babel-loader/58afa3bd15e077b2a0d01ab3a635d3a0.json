{"ast":null,"code":"var _jsxFileName = \"/Users/karvonen/Valet/udemy-port/jbook/packages/local-client/src/components/cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport './cell-list.css';\nimport { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellListItem from './cell-list-item';\nimport AddCell from './add-cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCell, {\n      previousCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list\",\n    children: [/*#__PURE__*/_jsxDEV(AddCell, {\n      forceVisible: cells.length === 0,\n      previousCellId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), renderedCells]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/Users/karvonen/Valet/udemy-port/jbook/packages/local-client/src/components/cell-list.tsx"],"names":["Fragment","useTypedSelector","CellListItem","AddCell","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,KAAK,GAAGJ,gBAAgB,CAAC;AAAA,QAAC;AAAEI,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAT,KAAD;AAAA,WAC7BD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAD6B;AAAA,GAAD,CAA9B;AAIA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAWG,IAAD,iBAC9B,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,cAAc,EAAEA,IAAI,CAACF;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAeE,IAAI,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEJ,KAAK,CAACO,MAAN,KAAiB,CAAxC;AAA2C,MAAA,cAAc,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMN,Q;UACUH,gB;;;KADVG,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import './cell-list.css';\nimport { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellListItem from './cell-list-item';\nimport AddCell from './add-cell';\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  );\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div className=\"cell-list\">\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}